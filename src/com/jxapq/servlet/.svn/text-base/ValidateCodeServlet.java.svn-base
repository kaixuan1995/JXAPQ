package com.jxapq.servlet;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.Random;

import javax.imageio.ImageIO;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

@SuppressWarnings("serial")
public class ValidateCodeServlet extends HttpServlet {

	public static final int HEIGHT=30;
	public static final int WIDTH=100;
	public void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		BufferedImage image=new BufferedImage(WIDTH,HEIGHT,BufferedImage.TYPE_INT_RGB);
		Graphics g =image.createGraphics();
		//设置背景色
		setBackground(g);
		//设置边框
		setBorder(g);
		//画干扰线
		setRandomLine(g);
		//写随机数
		String validateCode=setRandomStr((Graphics2D)g);
		//图形写给浏览器
		HttpSession session=request.getSession();
		session.setAttribute("validateCode",validateCode);
		response.setContentType("image/jpeg");//通知浏览器要传送的数据为一个图片
		response.setHeader("Cache-Control","no-cache");//通知浏览器不要缓存这张图片
		response.setHeader("Pragma", "no-cache");
		ImageIO.write(image,"jpg",response.getOutputStream());//将图片流写入response中。
	}
	private void setBackground(Graphics g){
		Color c =g.getColor();
		g.setColor(Color.WHITE);
		g.fillRect(0, 0, 120, 30);
		g.setColor(c);
	}
	private void setBorder(Graphics g){
		Color c=g.getColor();
		g.setColor(Color.GREEN);
		g.drawRect(1, 1, WIDTH-2, HEIGHT-2);
		g.setColor(c);
	}
	
	private void setRandomLine(Graphics g){
		g.setColor(Color.RED);
		for(int i=0;i<5;i++){
			int x1=new Random().nextInt(WIDTH);
			int y1=new Random().nextInt(HEIGHT);
			int x2=new Random().nextInt(WIDTH);
			int y2=new Random().nextInt(HEIGHT);
			g.drawLine(x1, y1, x2, y2);
		}
	}
	private String setRandomStr(Graphics2D g){
		StringBuffer sb=new StringBuffer();
		String str="\u0061\u0062\u0063\u0064\u0065\u0066\u0067\u0068\u0069"
				+ "\u006A\006B\u006C\u006D\u006E\u006F"
				+ "\u0070\u0071\u0072\u0073\u0074\u0075\u0076"
				+"\u0077\u0078\u0079\u007A";//a~z的Unicode编码
		g.setColor(Color.BLACK);
		g.setFont(new Font("宋体",Font.BOLD,20));
		int x=20;
		for(int i=0;i<4;i++){
			int degree=new Random().nextInt()%30;//生成+-30之间的数
			String ch =str.charAt(new Random().nextInt(str.length()))+"";
			sb.append(ch);
			g.rotate(degree*Math.PI/180, x,20);//设置字体旋转的角度
			g.drawString(ch, x, 20);
			g.rotate(-degree*Math.PI/180, x,20);
			x=x+20;
		}
		return sb.toString();
	}
	public void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doGet(request,response);
	}

}
